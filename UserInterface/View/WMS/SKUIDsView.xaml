<UserControl x:Class="UserInterface.View.SKUIDsView"
        ResxExtension.DefaultResxName="UserInterface.Properties.Resources" Language="{UICulture}"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        mc:Ignorable="d"
        xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
        xmlns:src="clr-namespace:UserInterface.View"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        DataContext="{Binding SKUIDs, Source={StaticResource Locator}}"
        d:DesignWidth="1280"
        d:DesignHeight="720">

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="{Binding Converter={StaticResource AddMultConverter}, 
                                    Path=(FrameworkElement.ActualHeight), 
                                    RelativeSource={RelativeSource AncestorType=UserControl},
                                    ConverterParameter=-120|0.5}"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="{Binding Converter={StaticResource AddMultConverter}, 
                                    Path=(FrameworkElement.ActualHeight), 
                                    RelativeSource={RelativeSource AncestorType=UserControl},
                                    ConverterParameter=-120|0.5}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="400"/>
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="2" BorderBrush="SkyBlue" BorderThickness="0,0,0,5" Margin="0,0,0,20">
            <TextBlock Text="{Resx SKUIDs}" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="{StaticResource LargeFontSize}"/>
        </Border>
        <TextBlock Grid.Row="1" Text="{Resx SKUIDs}" TextWrapping="Wrap" VerticalAlignment="Bottom" FontSize="{StaticResource MidFontSize}" FontWeight="Medium"/>
        <DataGrid Grid.Row="2"
            x:Name="dgSKUIDs" 
            ItemsSource="{Binding SKUIDList}" 
            dgx:DataGridFilter.IsAutoFilterEnabled="True"
            dgx:Tools.ApplyInitialSorting="True"
            SelectedItem="{Binding SelectedSKUID, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
            IsEnabled="{Binding EditEnabled, Converter={StaticResource InvertBool}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            CanUserAddRows="False"
            AutoGenerateColumns="False" 
            IsReadOnly="True"
            FontSize="{StaticResource BaseFontSize}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged" >
                    <i:InvokeCommandAction Command="{Binding RefreshTUs}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns >
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=SKUID}" 
                                    Width="*" Binding="{Binding ID}"   dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Description}" 
                                    Width="3*" Binding="{Binding Description}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
<!--                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=DefaultQty}" 
                                    Width="*" Binding="{Binding DefaultQty}" dgx:DataGridFilterColumn.IsFilterVisible="True"/> 
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Unit}" 
                                    Width="*" Binding="{Binding Unit}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Weight}" 
                                    Width="*" Binding="{Binding Weight}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=FrequencyClass}" 
                                    Width="*" Binding="{Binding FrequencyClass}" dgx:DataGridFilterColumn.IsFilterVisible="True"/> -->
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Length}" 
                                    Width="*" Binding="{Binding Length}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Width}" 
                                    Width="*" Binding="{Binding Width}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Height}" 
                                    Width="*" Binding="{Binding Height}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Resx TUs}" TextWrapping="Wrap" 
                       VerticalAlignment="Bottom" HorizontalAlignment="Left" 
                       FontSize="{StaticResource MidFontSize}" FontWeight="Medium"/>
            <TextBlock Grid.Column="1" Text="{Resx Selected}" Margin="0,0,10,0"
                       VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                       FontSize="{StaticResource BaseFontSize}"/>
            <TextBlock Grid.Column="2" Text="{Binding NumberOfSelectedItems}" Margin="0,0,10,0"
                       VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                       FontSize="{StaticResource BaseFontSize}"/>
        </Grid>
        <DataGrid Grid.Row="4"
            x:Name="dgTUs" 
            ItemsSource="{Binding TUList}" 
            dgx:DataGridFilter.IsAutoFilterEnabled="True"
            dgx:Tools.ApplyInitialSorting="True"
            IsEnabled="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            CanUserAddRows="False"
            AutoGenerateColumns="False" 
            IsReadOnly="True"
            FontSize="{StaticResource BaseFontSize}">
            <DataGrid.Columns >
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=BoxID}" 
                                    Width="*" Binding="{Binding BoxID}"   dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Batch}" 
                                    Width="2*" Binding="{Binding Batch}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=TUID}" 
                                    Width="*" Binding="{Binding TUID, Converter={StaticResource PalletIntAndString}}"   dgx:DataGridFilterColumn.IsFilterVisible="True"/>
<!--                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Qty}" 
                                    Width="*" Binding="{Binding Qty}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=ProdDate}" 
                                    Width="*" Binding="{Binding ProdDate}" dgx:DataGridFilterColumn.IsFilterVisible="True"/> -->
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=ProdDate}" 
                                    Width="*" Binding="{Binding ProdDate}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Location}" 
                                    Width="*" Binding="{Binding Location}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Blocked}" 
                                    Width="*" Binding="{Binding Status}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand
                        Command="{Binding SelectionChangedCommand}"
                        CommandParameter="{Binding SelectedItems,
                        ElementName=dgTUs}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <StackPanel Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="bRefresh" Margin="0,0,0,10" Content="{Resx Refresh}" Command="{Binding Refresh}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="bAdd" Margin="0,0,0,20" Content="{Resx Add}" Command="{Binding Add}"/>
                <Button Name="bEdit" Margin="10,0,0,20" Content="{Resx Edit}" Command="{Binding Edit}"/>
            </StackPanel>
            <ContentControl x:Name="ccSKUID" 
                        IsEnabled="{Binding EditEnabled}"                       
                        Content="{Binding DetailedSKUID}"
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Top"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="bCancel" Margin="0,10,10,10" 
                        Content="{Resx Cancel}" 
                        Command="{Binding Cancel}"
                        Visibility="{Binding EnabledCC, Converter={StaticResource BoolToVisibility}}"/>
                <Button Name="bSave" Margin="0,10,0,10" 
                        Content="{Resx Confirm}" 
                        Command="{Binding Confirm}"
                        Visibility="{Binding EnabledCC, Converter={StaticResource BoolToVisibility}}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
