<UserControl x:Class="UserInterface.View.CommandsView"
        ResxExtension.DefaultResxName="UserInterface.Properties.Resources" Language="{UICulture}"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
        xmlns:src="clr-namespace:UserInterface.View"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"     
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d ignore"
        DataContext="{Binding Commands, Source={StaticResource Locator}}"
        d:DesignWidth="1000"
        d:DesignHeight="750">

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="{Binding Converter={StaticResource AddMultConverter}, 
                                    Path=(FrameworkElement.ActualHeight), 
                                    RelativeSource={RelativeSource AncestorType=UserControl},
                                    ConverterParameter=-103|0.73}"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="{Binding Converter={StaticResource AddMultConverter}, 
                                    Path=(FrameworkElement.ActualHeight), 
                                    RelativeSource={RelativeSource AncestorType=UserControl},
                                    ConverterParameter=-103|0.27}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="400"/>
        </Grid.ColumnDefinitions>
        <Border BorderBrush="SkyBlue" BorderThickness="0,0,0,5" Margin="0,0,0,20" Grid.ColumnSpan="2"> 
            <TextBlock Text="{Resx Commands}" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="{StaticResource LargeFontSize}"/>
        </Border>
        <Grid Grid.Row="1" Grid.Column="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Resx Commands}" Grid.Column="0" FontWeight="Medium" FontSize="{StaticResource MidFontSize}"/>
            <TextBlock Text="{Resx Selected}" Grid.Column="1" FontSize="{StaticResource BaseFontSize}" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding NumberOfSelectedItems}" Grid.Column="2" FontSize="{StaticResource BaseFontSize}" HorizontalAlignment="Right" Margin="5,0,0,0"/>
        </Grid>
        <DataGrid 
            x:Name="dgCommands" Grid.Row="2" 
            ItemsSource="{Binding CommandList}"
            SelectedItem="{Binding SelectedContent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            IsEnabled="{Binding IsEnabledCC, Converter={StaticResource InvertBool}}"
            dgx:DataGridFilter.IsAutoFilterEnabled="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            CanUserAddRows="False"
            AutoGenerateColumns="False" 
            IsReadOnly="True"
            FontSize="{StaticResource BaseFontSize}">
            <DataGrid.Columns >
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=WMS_ID}" 
                                    Width="100" Binding="{Binding WMS_ID}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=MFCS_ID}" 
                                    Width="100" Binding="{Binding ID}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Task}" 
                                    Width="100" Binding="{Binding Task}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=TU}" 
                                    Width="100" Binding="{Binding Material, Converter={StaticResource PalletIntAndString}}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Source}" 
                                    Width="100" Binding="{Binding Source}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Target}" 
                                    Width="100" Binding="{Binding Target}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Segment}" 
                                    Width="100" Binding="{Binding Segment}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=CancelID}" 
                                    Width="100" Binding="{Binding CommandID}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Priority}" 
                                    Width="100" Binding="{Binding Priority}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Info}" 
                                    Width="*" Binding="{Binding Info}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Status}" 
                                    Width="100" Binding="{Binding Status}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Time}" 
                                    Width="150" Binding="{Binding Time}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand
                        Command="{Binding SelectionChangedCommand}"
                        CommandParameter="{Binding SelectedItems,
                        ElementName=dgCommands}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <TextBlock Text="{Resx Detailed_simple_commands}" Grid.Row="3" FontWeight="Medium" FontSize="{StaticResource MidFontSize}"/>
        <DataGrid 
            x:Name="dgManualCommands" Grid.Row="4" 
            ItemsSource="{Binding SimpleCommandList, IsAsync=True}"
            IsEnabled="{Binding IsEnabledCC, Converter={StaticResource InvertBool}}"
            dgx:DataGridFilter.IsAutoFilterEnabled="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            CanUserAddRows="False"
            AutoGenerateColumns="False"             
            IsReadOnly="True"
            FontSize="{StaticResource BaseFontSize}">
            <DataGrid.Columns >
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=MFCS_ID}" 
                                    Width="100" Binding="{Binding Command_ID}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=ID}" 
                                    Width="100" Binding="{Binding ID}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Task}" 
                                    Width="*" Binding="{Binding TaskDescription}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Status}" 
                                    Width="100" Binding="{Binding Status}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
                <DataGridTextColumn Header="{Resx ResxName=UserInterface.Properties.Resources, Key=Time}" 
                                    Width="150" Binding="{Binding Time}" dgx:DataGridFilterColumn.IsFilterVisible="True"/>
            </DataGrid.Columns>
        </DataGrid>

        <ScrollViewer Grid.Row="2" Grid.Column="1" Grid.RowSpan="3" VerticalScrollBarVisibility="Auto">
            <Grid HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="20,0,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
<!--                    <RowDefinition Height="175"/> -->
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Name="bRefresh" Margin="0,0,0,10" Content="{Resx Refresh}" Command="{Binding RefreshCmd}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Name="bAddMat" Margin="0,0,10,10" Content="{Resx Cmd_TU}" Command="{Binding AddCmdMat}"/>
                        <Button Name="bAddSeg" Margin="0,0,0,10" Content="{Resx Cmd_segment}" Command="{Binding AddCmdSeg}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Name="bRestart" Margin="0,0,10,10" Content="{Resx Restart}" Command="{Binding RestartCmd}"/>
                        <Button Name="bDelete" Margin="0,0,0,10" Content="{Resx Cancel}" Command="{Binding DeleteCmd}"/>
                    </StackPanel>
                    <ContentControl x:Name="ccCommand" Margin="0,10,0,0"
                    IsEnabled="{Binding IsEnabledField}"
                    Content="{Binding DetailedContent, IsAsync=True}"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Top"/>
                    <Grid Visibility="{Binding IsInDeleteMode, Converter={StaticResource BoolToVisibility}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition MinWidth ="200" Width="*"/>
                            <ColumnDefinition Width="35"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Resx Reason}" Grid.Row="0" Margin="0,0,0,10"/>
                        <ComboBox Grid.Row="0" Grid.Column="2" Margin="0,0,0,10"
                                  ItemsSource="{Binding Source={StaticResource CommandsReasonList}}" 
                                  SelectedItem="{Binding Path=Reason, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                  IsSynchronizedWithCurrentItem="True"/>
                    </Grid>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Name="bCancel" Margin="0,10,10,10" Content="{Resx Cancel}" Command="{Binding Cancel}" Visibility="{Binding IsEnabledCC, Converter={StaticResource BoolToVisibility} }"/>
                        <Button Name="bConfirm" Margin="0,10,0,10" Content="{Resx Confirm}" Command="{Binding Confirm}" Visibility="{Binding IsEnabledCC, Converter={StaticResource BoolToVisibility}}"/>
                    </StackPanel>
                </StackPanel>
<!--                
                <Border Grid.Row="1"  BorderThickness="2,2,2,2" BorderBrush ="SkyBlue" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="Visible">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Rack: " />
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding GenerateLoc, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Quantity: "/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding GenerateQuantity, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Start ID: " />
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PalletStart, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"/>
                        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <Button Margin="0,0,0,5" Width="80" MinWidth="60" HorizontalAlignment="Right" Content="Pallets WH" Command="{Binding GeneratePallets}"/>
                            <Button Margin="5,0,0,5" Width="80" MinWidth="60" HorizontalAlignment="Right" Content="OUT cmds" Command="{Binding GenerateCmdOUT}"/>
                            <Button Margin="5,0,0,5" Width="80" MinWidth="60" HorizontalAlignment="Right" Content="IN cmds" Command="{Binding GenerateCmdIN}"/>
                        </StackPanel>
                    </Grid>
                </Border>
-->                
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
